plugins {
	id 'fabric-loom' version "${loom_version}"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven { url 'https://api.modrinth.com/maven' }
	maven { url 'https://maven.nucleoid.xyz' }
	maven { url 'https://maven.tomalbrc.de' }
	maven { url 'https://maven.ladysnake.org/releases' }
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://maven.maxhenkel.de/repository/public' }
	maven { url 'https://maven.parchmentmc.org' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	if (project.polymer_version != "null") modImplementation include("eu.pb4:polymer-bundled:${project.polymer_version}")
	if (project.blockbench_import_library_version != "null") modImplementation include("de.tomalbrc:blockbench-import-library:${project.blockbench_import_library_version}")

	implementation "de.maxhenkel.voicechat:voicechat-api:${project.voicechat_api_version}"
	if (project.voicechat_mod_version != "null") modRuntimeOnly "maven.modrinth:simple-voice-chat:fabric-${project.voicechat_mod_version}"
	if (project.carpet_mod_version != "null") modRuntimeOnly "maven.modrinth:carpet:${project.carpet_mod_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName
}
